        -:    0:Source:test.c
        -:    0:Graph:test.gcno
        -:    0:Data:test.gcda
        -:    0:Runs:2
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:#include "cxml.h"
        -:    3:#include "cxml_types.h"
        -:    4:#include <stdlib.h>
        -:    5:
        2:    6:int main (int argc, char** argv) {
        2:    7:    char* file = malloc(2048);
        -:    8:
        2:    9:    FILE* fp = fopen("test.xml", "rb");
        2:   10:    long size = fread(file, 1, 2048, fp);
        2:   11:    fclose(fp);
        -:   12:
        -:   13:    struct XmlDocument doc; 
        2:   14:    xml_document_create(&doc, file, size);
        -:   15:
        2:   16:    const char* indent = 
        -:   17:    "                                  "
        -:   18:    "                                  "
        -:   19:    "                                  "
        -:   20:    "                                  "
        -:   21:    "                                  "
        -:   22:    "                                  "
        -:   23:    "                                  "
        -:   24:    "                                  "
        -:   25:    "                                  "
        -:   26:    "                                  "
        -:   27:    "                                  "
        -:   28:    "                                  "
        -:   29:    "                                  "
        -:   30:    "                                  ";
        2:   31:    int idt = 0;
        -:   32:
        2:   33:    int evt = XML_EOF;
       48:   34:    while((evt = xml_read(&doc)) != XML_EOF) {
        2:   34-block  0
       48:   34-block  1
       46:   34-block  2
       46:   35:        switch(evt) {
       46:   35-block  0
        -:   36:            case XML_TAG_BEGIN:{
       14:   37:                struct XmlString str = xml_name(&doc);
       14:   38:                printf("%.*stag %.*s\n", idt, indent, str.length, str.str);
       14:   39:                idt+=2;
       14:   40:                break;
       14:   40-block  0
       14:   41:            }
        -:   42:
        -:   43:            case XML_TEXT: {
       14:   44:                struct XmlString str = xml_text(&doc);
       14:   45:                xml_string_trim(&str);
       14:   46:                if(str.length > 0)
       14:   46-block  0
        8:   47:                    printf("%.*stext %.*s\n", idt, indent, str.length, str.str);
        8:   47-block  0
       14:   48:                break;
       14:   48-block  0
        4:   49:            }
        -:   50:
        -:   51:            case XML_ATTRIBUTE: {
        4:   52:                struct XmlString attr_name = xml_attr_name(&doc);
        4:   53:                struct XmlString attr_val = xml_attr_value(&doc);
        8:   54:                printf("%.*sattr %.*s = %.*s\n", idt, indent, 
        4:   55:                    attr_name.length, attr_name.str,
        4:   56:                    attr_val.length, attr_val.str);
        4:   57:                break;
        4:   57-block  0
       12:   58:            }
        -:   59:
        -:   60:            case XML_TAG_END: {
       12:   61:                idt-=2;
       12:   62:                break;
       12:   62-block  0
        -:   63:            }
        -:   64:            
       46:   65:        }
        -:   66:    }
        -:   67:
        2:   68:    free(file);
        2:   69:    return 0;
        2:   69-block  0
        -:   70:}
