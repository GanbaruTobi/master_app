digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x564e06fa7310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i8**, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca %struct._IO_FILE*, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca %struct.XmlDocument, align 8\l  %10 = alloca i8*, align 8\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca %struct.XmlString, align 8\l  %14 = alloca %struct.XmlString, align 8\l  %15 = alloca %struct.XmlString, align 8\l  %16 = alloca %struct.XmlString, align 8\l  store i32 0, i32* %3, align 4\l  store i32 %0, i32* %4, align 4\l  store i8** %1, i8*** %5, align 8\l  %17 = call noalias i8* @malloc(i64 2048) #3\l  store i8* %17, i8** %6, align 8\l  %18 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([9 x i8], [9\l... x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]*\l... @.str.1, i64 0, i64 0))\l  store %struct._IO_FILE* %18, %struct._IO_FILE** %7, align 8\l  %19 = load i8*, i8** %6, align 8\l  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8\l  %21 = call i64 @fread(i8* %19, i64 1, i64 2048, %struct._IO_FILE* %20)\l  store i64 %21, i64* %8, align 8\l  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8\l  %23 = call i32 @fclose(%struct._IO_FILE* %22)\l  %24 = load i8*, i8** %6, align 8\l  %25 = load i64, i64* %8, align 8\l  call void @xml_document_create(%struct.XmlDocument* %9, i8* %24, i64 %25)\l  store i8* getelementptr inbounds ([477 x i8], [477 x i8]* @.str.2, i64 0,\l... i64 0), i8** %10, align 8\l  store i32 0, i32* %11, align 4\l  store i32 1, i32* %12, align 4\l  br label %26\l}"];
	Node0x564e06fa7310 -> Node0x564e06fac020;
	Node0x564e06fac020 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%26:\l26:                                               \l  %27 = call i32 @xml_read(%struct.XmlDocument* %9)\l  store i32 %27, i32* %12, align 4\l  %28 = icmp ne i32 %27, 1\l  br i1 %28, label %29, label %94\l|{<s0>T|<s1>F}}"];
	Node0x564e06fac020:s0 -> Node0x564e06fac5f0;
	Node0x564e06fac020:s1 -> Node0x564e06fac640;
	Node0x564e06fac5f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%29:\l29:                                               \l  %30 = load i32, i32* %12, align 4\l  switch i32 %30, label %93 [\l    i32 2, label %31\l    i32 4, label %47\l    i32 5, label %66\l    i32 3, label %90\l  ]\l|{<s0>def|<s1>2|<s2>4|<s3>5|<s4>3}}"];
	Node0x564e06fac5f0:s0 -> Node0x564e06fac7f0;
	Node0x564e06fac5f0:s1 -> Node0x564e06fac870;
	Node0x564e06fac5f0:s2 -> Node0x564e06fac930;
	Node0x564e06fac5f0:s3 -> Node0x564e06fac9f0;
	Node0x564e06fac5f0:s4 -> Node0x564e06facab0;
	Node0x564e06fac870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%31:\l31:                                               \l  %32 = call \{ i8*, i64 \} @xml_name(%struct.XmlDocument* %9)\l  %33 = bitcast %struct.XmlString* %13 to \{ i8*, i64 \}*\l  %34 = getelementptr inbounds \{ i8*, i64 \}, \{ i8*, i64 \}* %33, i32 0, i32 0\l  %35 = extractvalue \{ i8*, i64 \} %32, 0\l  store i8* %35, i8** %34, align 8\l  %36 = getelementptr inbounds \{ i8*, i64 \}, \{ i8*, i64 \}* %33, i32 0, i32 1\l  %37 = extractvalue \{ i8*, i64 \} %32, 1\l  store i64 %37, i64* %36, align 8\l  %38 = load i32, i32* %11, align 4\l  %39 = load i8*, i8** %10, align 8\l  %40 = getelementptr inbounds %struct.XmlString, %struct.XmlString* %13, i32\l... 0, i32 1\l  %41 = load i64, i64* %40, align 8\l  %42 = getelementptr inbounds %struct.XmlString, %struct.XmlString* %13, i32\l... 0, i32 0\l  %43 = load i8*, i8** %42, align 8\l  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14\l... x i8]* @.str.3, i64 0, i64 0), i32 %38, i8* %39, i64 %41, i8* %43)\l  %45 = load i32, i32* %11, align 4\l  %46 = add nsw i32 %45, 2\l  store i32 %46, i32* %11, align 4\l  br label %93\l}"];
	Node0x564e06fac870 -> Node0x564e06fac7f0;
	Node0x564e06fac930 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%47:\l47:                                               \l  %48 = call \{ i8*, i64 \} @xml_text(%struct.XmlDocument* %9)\l  %49 = bitcast %struct.XmlString* %14 to \{ i8*, i64 \}*\l  %50 = getelementptr inbounds \{ i8*, i64 \}, \{ i8*, i64 \}* %49, i32 0, i32 0\l  %51 = extractvalue \{ i8*, i64 \} %48, 0\l  store i8* %51, i8** %50, align 8\l  %52 = getelementptr inbounds \{ i8*, i64 \}, \{ i8*, i64 \}* %49, i32 0, i32 1\l  %53 = extractvalue \{ i8*, i64 \} %48, 1\l  store i64 %53, i64* %52, align 8\l  call void @xml_string_trim(%struct.XmlString* %14)\l  %54 = getelementptr inbounds %struct.XmlString, %struct.XmlString* %14, i32\l... 0, i32 1\l  %55 = load i64, i64* %54, align 8\l  %56 = icmp ugt i64 %55, 0\l  br i1 %56, label %57, label %65\l|{<s0>T|<s1>F}}"];
	Node0x564e06fac930:s0 -> Node0x564e06fae940;
	Node0x564e06fac930:s1 -> Node0x564e06fae990;
	Node0x564e06fae940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%57:\l57:                                               \l  %58 = load i32, i32* %11, align 4\l  %59 = load i8*, i8** %10, align 8\l  %60 = getelementptr inbounds %struct.XmlString, %struct.XmlString* %14, i32\l... 0, i32 1\l  %61 = load i64, i64* %60, align 8\l  %62 = getelementptr inbounds %struct.XmlString, %struct.XmlString* %14, i32\l... 0, i32 0\l  %63 = load i8*, i8** %62, align 8\l  %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15\l... x i8]* @.str.4, i64 0, i64 0), i32 %58, i8* %59, i64 %61, i8* %63)\l  br label %65\l}"];
	Node0x564e06fae940 -> Node0x564e06fae990;
	Node0x564e06fae990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%65:\l65:                                               \l  br label %93\l}"];
	Node0x564e06fae990 -> Node0x564e06fac7f0;
	Node0x564e06fac9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%66:\l66:                                               \l  %67 = call \{ i8*, i64 \} @xml_attr_name(%struct.XmlDocument* %9)\l  %68 = bitcast %struct.XmlString* %15 to \{ i8*, i64 \}*\l  %69 = getelementptr inbounds \{ i8*, i64 \}, \{ i8*, i64 \}* %68, i32 0, i32 0\l  %70 = extractvalue \{ i8*, i64 \} %67, 0\l  store i8* %70, i8** %69, align 8\l  %71 = getelementptr inbounds \{ i8*, i64 \}, \{ i8*, i64 \}* %68, i32 0, i32 1\l  %72 = extractvalue \{ i8*, i64 \} %67, 1\l  store i64 %72, i64* %71, align 8\l  %73 = call \{ i8*, i64 \} @xml_attr_value(%struct.XmlDocument* %9)\l  %74 = bitcast %struct.XmlString* %16 to \{ i8*, i64 \}*\l  %75 = getelementptr inbounds \{ i8*, i64 \}, \{ i8*, i64 \}* %74, i32 0, i32 0\l  %76 = extractvalue \{ i8*, i64 \} %73, 0\l  store i8* %76, i8** %75, align 8\l  %77 = getelementptr inbounds \{ i8*, i64 \}, \{ i8*, i64 \}* %74, i32 0, i32 1\l  %78 = extractvalue \{ i8*, i64 \} %73, 1\l  store i64 %78, i64* %77, align 8\l  %79 = load i32, i32* %11, align 4\l  %80 = load i8*, i8** %10, align 8\l  %81 = getelementptr inbounds %struct.XmlString, %struct.XmlString* %15, i32\l... 0, i32 1\l  %82 = load i64, i64* %81, align 8\l  %83 = getelementptr inbounds %struct.XmlString, %struct.XmlString* %15, i32\l... 0, i32 0\l  %84 = load i8*, i8** %83, align 8\l  %85 = getelementptr inbounds %struct.XmlString, %struct.XmlString* %16, i32\l... 0, i32 1\l  %86 = load i64, i64* %85, align 8\l  %87 = getelementptr inbounds %struct.XmlString, %struct.XmlString* %16, i32\l... 0, i32 0\l  %88 = load i8*, i8** %87, align 8\l  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22\l... x i8]* @.str.5, i64 0, i64 0), i32 %79, i8* %80, i64 %82, i8* %84, i64 %86,\l... i8* %88)\l  br label %93\l}"];
	Node0x564e06fac9f0 -> Node0x564e06fac7f0;
	Node0x564e06facab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%90:\l90:                                               \l  %91 = load i32, i32* %11, align 4\l  %92 = sub nsw i32 %91, 2\l  store i32 %92, i32* %11, align 4\l  br label %93\l}"];
	Node0x564e06facab0 -> Node0x564e06fac7f0;
	Node0x564e06fac7f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%93:\l93:                                               \l  br label %26, !llvm.loop !4\l}"];
	Node0x564e06fac7f0 -> Node0x564e06fac020;
	Node0x564e06fac640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%94:\l94:                                               \l  %95 = load i8*, i8** %6, align 8\l  call void @free(i8* %95) #3\l  ret i32 0\l}"];
}
